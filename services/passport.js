const passport = require('passport');
const GoogleStrategy = require('passport-google-oauth20').Strategy;
const mongoose = require('mongoose');
const keys = require('../config/keys'); //go up one directory into the server folder, then into the config folder, and then find the keys as file inside of their.

const User = mongoose.model('users');

passport.serializeUser((user, done) => {
    done(null, user.id); //automatically generated by Mongo
});

passport.deserializeUser((id, done) => {
    User.findById(id).then(user => {
        done(null, user);
    });
});

passport.use(
    new GoogleStrategy(
        {
        clientID: keys.googleClientID,
        clientSecret: keys.googleClientSecret,
        callbackURL: '/auth/google/callback',
        proxy: true
        }, 
        async (accessToken, refreshToken, profile, done) => {
            const existingUser = await User.findOne({googleId: profile.id});

            if (existingUser) {
                return done(null, existingUser);
            } 

            const user = await new User({googleId: profile.id}).save();
            done(null, user);
        }
    )
); //Generic register
